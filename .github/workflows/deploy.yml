name: Deploy to VM (Docker Compose)

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # (optionnel) Test rapide SSH pour voir l'environnement
      - name: Smoke test SSH (uname, whoami, docker)
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_USER }}
          key: ${{ secrets.VM_SSH_KEY }}
          script: |
            bash -lc '
              set -eux
              whoami
              uname -a
              command -v docker && docker --version || true
            '

      - name: Deploy on VM
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_USER }}
          key: ${{ secrets.VM_SSH_KEY }}
          script: |
            bash -lc '
              set -Eeuo pipefail

              APP_DIR=/opt/familyzen
              REPO=https://github.com/sdis24/familyzen-api.git
              BRANCH=main

              # 1) Docker si absent (et on garde sudo pour être safe)
              if ! command -v docker >/dev/null 2>&1; then
                curl -fsSL https://get.docker.com | sudo sh
                sudo usermod -aG docker "$USER" || true
              fi

              # 2) Préparer le dossier
              sudo mkdir -p "$APP_DIR"
              sudo chown "$USER:$USER" "$APP_DIR"

              # 3) Code: clone initial ou reset hard sur la branche
              if [ ! -d "$APP_DIR/.git" ]; then
                git clone --depth=1 --branch "$BRANCH" "$REPO" "$APP_DIR"
              else
                cd "$APP_DIR"
                git fetch --all --prune
                git reset --hard "origin/$BRANCH"
              fi

              cd "$APP_DIR"

              # 4) Build & run (sudo tant que la session n’a pas repris le groupe docker)
              sudo docker compose up -d --build

              # 5) Santé: on attend jusqu’à 2 min que /health réponde {"ok":true}
              end=$((SECONDS+120))
              while true; do
                if curl -fsS http://localhost:8000/health | grep -q '"'"'"ok"'"'": *true"; then
                  echo "Health OK"
                  break
                fi
                if [ $SECONDS -ge $end ]; then
                  echo "Health KO — logs docker ci-dessous :"
                  sudo docker compose ps
                  sudo docker compose logs --tail 200
                  exit 1
                fi
                sleep 2
              done
            '
