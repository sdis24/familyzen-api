script: |
  set -euo pipefail

  APP_DIR=/opt/familyzen
  REPO=https://github.com/sdis24/familyzen-api.git
  BRANCH=main

  # ---- Docker / Compose si absent ----
  if ! command -v docker >/dev/null 2>&1; then
    sudo apt-get update
    sudo apt-get install -y ca-certificates curl gnupg
    sudo install -m 0755 -d /etc/apt/keyrings
    curl -fsSL https://download.docker.com/linux/debian/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
    echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/debian \
    $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | sudo tee /etc/apt/sources.list.d/docker.list >/dev/null
    sudo apt-get update
    sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
  fi

  # ---- Prépare le dossier de déploiement ----
  sudo mkdir -p "$APP_DIR"
  sudo chown "$USER:$USER" "$APP_DIR"

  if [ -d "$APP_DIR/.git" ]; then
    echo "[deploy] Repo déjà présent → fetch + reset"
    cd "$APP_DIR"
    git fetch --all --prune
    git reset --hard "origin/$BRANCH"
  else
    echo "[deploy] Repo absent"
    # si le dossier n'est pas vide, on le vide pour éviter l'erreur 'destination exists'
    if [ -n "$(ls -A "$APP_DIR" 2>/dev/null || true)" ]; then
      echo "[deploy] Dossier non vide → cleanup"
      rm -rf "${APP_DIR:?}/"*
    fi
    git clone --depth=1 -b "$BRANCH" "$REPO" "$APP_DIR"
    cd "$APP_DIR"
  fi

  # ---- Build & run ----
  sudo docker compose up -d --build

  # ---- Health check (2 min max) ----
  end=$((SECONDS+120))
  until curl -fsS http://localhost:8000/health | grep -q '"ok":[[:space:]]*true'; do
    if [ $SECONDS -ge $end ]; then
      echo "Health KO — derniers logs :"
      sudo docker compose ps
      sudo docker compose logs --tail 200
      exit 1
    fi
    sleep 2
  done
  echo "Health OK"
