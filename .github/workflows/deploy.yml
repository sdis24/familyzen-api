name: Deploy to VM (Docker Compose)

on:
  push:
    branches: [ main ]  # change only if your default branch is different

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # optional but useful: quick SSH smoke test
      - name: Smoke test SSH (uname, whoami, docker)
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_USER }}
          key: ${{ secrets.VM_SSH_KEY }}
          script: |
            set -euxo pipefail
            whoami
            uname -a
            command -v docker && docker --version || true

      - name: Deploy on VM
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_USER }}
          key: ${{ secrets.VM_SSH_KEY }}
          script: |
            set -euo pipefail

            APP_DIR=/opt/familyzen
            REPO=https://github.com/sdis24/familyzen-api.git
            BRANCH=main

            # Install Docker/Compose if missing
            if ! command -v docker >/dev/null 2>&1; then
              curl -fsSL https://get.docker.com | sh
              sudo usermod -aG docker $USER || true
            fi

            # Prepare directory
            sudo mkdir -p "$APP_DIR"
            sudo chown "$USER:$USER" "$APP_DIR"

            # Code: clone or reset to the latest on BRANCH
            if [ ! -d "$APP_DIR/.git" ]; then
              git clone --depth=1 --branch "$BRANCH" "$REPO" "$APP_DIR"
            else
              cd "$APP_DIR"
              git fetch --all --prune
              git reset --hard origin/"$BRANCH"
            fi

            cd "$APP_DIR"

            # Build & run
            docker compose up -d --build

            # Health check (2 minutes max)
            end=$((SECONDS+120))
            until curl -fsS http://localhost:8000/health | grep -q '"ok": *true'; do
              if [ $SECONDS -ge $end ]; then
                echo 'Health KO â€” docker logs:'
                docker compose logs --tail 200
                exit 1
              fi
              sleep 2
            done

            echo 'Health OK'
